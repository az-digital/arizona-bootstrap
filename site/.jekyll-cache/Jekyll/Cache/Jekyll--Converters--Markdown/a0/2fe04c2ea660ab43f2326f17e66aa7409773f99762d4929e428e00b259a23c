I"<h2 id="installing-arizona-bootstrap">Installing Arizona Bootstrap</h2>

<p><a href="/arizona-bootstrap/docs/0.0/getting-started/download/#npm">Install arizona-bootstrap</a> as a Node.js module using npm.</p>

<h2 id="importing-javascript">Importing JavaScript</h2>

<p>Import <a href="/arizona-bootstrap/docs/0.0/getting-started/javascript/">Arizona Bootstrapâ€™s JavaScript</a> by adding this line to your appâ€™s entry point (usually <code class="highlighter-rouge">index.js</code> or <code class="highlighter-rouge">app.js</code>):</p>

<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="k">import</span> <span class="dl">'</span><span class="s1">arizona-bootstrap</span><span class="dl">'</span><span class="p">;</span></code></pre></figure>

<p>Alternatively, you may <strong>import plugins individually</strong> as needed:</p>

<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="k">import</span> <span class="dl">'</span><span class="s1">arizona-bootstrap/js/dist/util</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="dl">'</span><span class="s1">arizona-bootstrap/js/dist/alert</span><span class="dl">'</span><span class="p">;</span>
<span class="p">...</span></code></pre></figure>

<p>Arizona Bootstrap is dependent on <a href="https://jquery.com/">jQuery</a> and <a href="https://popper.js.org/">Popper</a>,
these are defined as <code class="highlighter-rouge">peerDependencies</code>, this means that you will have to make sure to add both of them
to your <code class="highlighter-rouge">package.json</code> using <code class="highlighter-rouge">npm install --save jquery popper.js</code>.</p>

<h2 id="importing-styles">Importing Styles</h2>

<h3 id="importing-precompiled-sass">Importing Precompiled Sass</h3>

<p>To enjoy the full potential of Arizona Bootstrap and customize it to your needs, use the source files as a part of your projectâ€™s bundling process.</p>

<p>First, create your own <code class="highlighter-rouge">_custom.scss</code> and use it to override the <a href="/arizona-bootstrap/docs/0.0/getting-started/theming/">built-in custom variables</a>. Then, use your main Sass file to import your custom variables, followed by Arizona Bootstrap:</p>

<figure class="highlight"><pre><code class="language-scss" data-lang="scss"><span class="k">@import</span> <span class="s2">"custom"</span><span class="p">;</span>
<span class="k">@import</span> <span class="s2">"~arizona-bootstrap/scss/arizona-bootstrap"</span><span class="p">;</span></code></pre></figure>

<p>For Arizona Bootstrap to compile, make sure you install and use the required loaders: <a href="https://github.com/webpack-contrib/sass-loader">sass-loader</a>, <a href="https://github.com/postcss/postcss-loader">postcss-loader</a> with <a href="https://github.com/postcss/autoprefixer#webpack">Autoprefixer</a>. With minimal setup, your webpack config should include this rule or similar:</p>

<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="p">...</span>
<span class="p">{</span>
  <span class="nl">test</span><span class="p">:</span> <span class="sr">/</span><span class="se">\.(</span><span class="sr">scss</span><span class="se">)</span><span class="sr">$/</span><span class="p">,</span>
  <span class="nx">use</span><span class="p">:</span> <span class="p">[{</span>
    <span class="na">loader</span><span class="p">:</span> <span class="dl">'</span><span class="s1">style-loader</span><span class="dl">'</span><span class="p">,</span> <span class="c1">// inject CSS to page</span>
  <span class="p">},</span> <span class="p">{</span>
    <span class="na">loader</span><span class="p">:</span> <span class="dl">'</span><span class="s1">css-loader</span><span class="dl">'</span><span class="p">,</span> <span class="c1">// translates CSS into CommonJS modules</span>
  <span class="p">},</span> <span class="p">{</span>
    <span class="na">loader</span><span class="p">:</span> <span class="dl">'</span><span class="s1">postcss-loader</span><span class="dl">'</span><span class="p">,</span> <span class="c1">// Run postcss actions</span>
    <span class="na">options</span><span class="p">:</span> <span class="p">{</span>
      <span class="na">plugins</span><span class="p">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span> <span class="c1">// postcss plugins, can be exported to postcss.config.js</span>
        <span class="k">return</span> <span class="p">[</span>
          <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">autoprefixer</span><span class="dl">'</span><span class="p">)</span>
        <span class="p">];</span>
      <span class="p">}</span>
    <span class="p">}</span>
  <span class="p">},</span> <span class="p">{</span>
    <span class="na">loader</span><span class="p">:</span> <span class="dl">'</span><span class="s1">sass-loader</span><span class="dl">'</span> <span class="c1">// compiles Sass to CSS</span>
  <span class="p">}]</span>
<span class="p">},</span>
<span class="p">...</span></code></pre></figure>

<h3 id="importing-compiled-css">Importing Compiled CSS</h3>

<p>Alternatively, you may use Arizona Bootstrapâ€™s ready-to-use CSS by simply adding this line to your projectâ€™s entry point:</p>

<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="k">import</span> <span class="dl">'</span><span class="s1">arizona-bootstrap/dist/css/arizona-bootstrap.min.css</span><span class="dl">'</span><span class="p">;</span></code></pre></figure>

<p>In this case you may use your existing rule for <code class="highlighter-rouge">css</code> without any special modifications to webpack config, except you donâ€™t need <code class="highlighter-rouge">sass-loader</code> just <a href="https://github.com/webpack-contrib/style-loader">style-loader</a> and <a href="https://github.com/webpack-contrib/css-loader">css-loader</a>.</p>

<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="p">...</span>
<span class="nx">module</span><span class="p">:</span> <span class="p">{</span>
  <span class="nl">rules</span><span class="p">:</span> <span class="p">[</span>
    <span class="p">{</span>
      <span class="na">test</span><span class="p">:</span> <span class="sr">/</span><span class="se">\.</span><span class="sr">css$/</span><span class="p">,</span>
      <span class="na">use</span><span class="p">:</span> <span class="p">[</span><span class="dl">'</span><span class="s1">style-loader</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">css-loader</span><span class="dl">'</span><span class="p">]</span>
    <span class="p">}</span>
  <span class="p">]</span>
<span class="p">}</span>
<span class="p">...</span></code></pre></figure>

:ET