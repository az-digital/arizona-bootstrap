{"version":3,"file":"config.js","sources":["../../src/util/config.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap util/config.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport Manipulator from '../dom/manipulator.js'\nimport { isElement, toType } from './index.js'\n\n/**\n * Class definition\n */\n\nclass Config {\n  // Getters\n  static get Default() {\n    return {}\n  }\n\n  static get DefaultType() {\n    return {}\n  }\n\n  static get NAME() {\n    throw new Error('You have to implement the static method \"NAME\", for each component!')\n  }\n\n  _getConfig(config) {\n    config = this._mergeConfigObj(config)\n    config = this._configAfterMerge(config)\n    this._typeCheckConfig(config)\n    return config\n  }\n\n  _configAfterMerge(config) {\n    return config\n  }\n\n  _mergeConfigObj(config, element) {\n    const jsonConfig = isElement(element) ? Manipulator.getDataAttribute(element, 'config') : {} // try to parse\n\n    return {\n      ...this.constructor.Default,\n      ...(typeof jsonConfig === 'object' ? jsonConfig : {}),\n      ...(isElement(element) ? Manipulator.getDataAttributes(element) : {}),\n      ...(typeof config === 'object' ? config : {})\n    }\n  }\n\n  _typeCheckConfig(config, configTypes = this.constructor.DefaultType) {\n    for (const [property, expectedTypes] of Object.entries(configTypes)) {\n      const value = config[property]\n      const valueType = isElement(value) ? 'element' : toType(value)\n\n      if (!new RegExp(expectedTypes).test(valueType)) {\n        throw new TypeError(\n          `${this.constructor.NAME.toUpperCase()}: Option \"${property}\" provided type \"${valueType}\" but expected type \"${expectedTypes}\".`\n        )\n      }\n    }\n  }\n}\n\nexport default Config\n"],"names":["Config","_proto","prototype","_getConfig","config","_mergeConfigObj","_configAfterMerge","_typeCheckConfig","element","jsonConfig","isElement","Manipulator","getDataAttribute","_extends","constructor","Default","getDataAttributes","configTypes","DefaultType","_i","_Object$entries","Object","entries","length","_Object$entries$_i","property","expectedTypes","value","valueType","toType","RegExp","test","TypeError","NAME","toUpperCase","_createClass","key","get","Error"],"mappings":"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"}