{"version":3,"file":"template-factory.js","sources":["../../src/util/template-factory.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap util/template-factory.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport SelectorEngine from '../dom/selector-engine.js'\nimport Config from './config.js'\nimport { DefaultAllowlist, sanitizeHtml } from './sanitizer.js'\nimport { execute, getElement, isElement } from './index.js'\n\n/**\n * Constants\n */\n\nconst NAME = 'TemplateFactory'\n\nconst Default = {\n  allowList: DefaultAllowlist,\n  content: {}, // { selector : text ,  selector2 : text2 , }\n  extraClass: '',\n  html: false,\n  sanitize: true,\n  sanitizeFn: null,\n  template: '<div></div>'\n}\n\nconst DefaultType = {\n  allowList: 'object',\n  content: 'object',\n  extraClass: '(string|function)',\n  html: 'boolean',\n  sanitize: 'boolean',\n  sanitizeFn: '(null|function)',\n  template: 'string'\n}\n\nconst DefaultContentType = {\n  entry: '(string|element|function|null)',\n  selector: '(string|element)'\n}\n\n/**\n * Class definition\n */\n\nclass TemplateFactory extends Config {\n  constructor(config) {\n    super()\n    this._config = this._getConfig(config)\n  }\n\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  getContent() {\n    return Object.values(this._config.content)\n      .map(config => this._resolvePossibleFunction(config))\n      .filter(Boolean)\n  }\n\n  hasContent() {\n    return this.getContent().length > 0\n  }\n\n  changeContent(content) {\n    this._checkContent(content)\n    this._config.content = { ...this._config.content, ...content }\n    return this\n  }\n\n  toHtml() {\n    const templateWrapper = document.createElement('div')\n    templateWrapper.innerHTML = this._maybeSanitize(this._config.template)\n\n    for (const [selector, text] of Object.entries(this._config.content)) {\n      this._setContent(templateWrapper, text, selector)\n    }\n\n    const template = templateWrapper.children[0]\n    const extraClass = this._resolvePossibleFunction(this._config.extraClass)\n\n    if (extraClass) {\n      template.classList.add(...extraClass.split(' '))\n    }\n\n    return template\n  }\n\n  // Private\n  _typeCheckConfig(config) {\n    super._typeCheckConfig(config)\n    this._checkContent(config.content)\n  }\n\n  _checkContent(arg) {\n    for (const [selector, content] of Object.entries(arg)) {\n      super._typeCheckConfig({ selector, entry: content }, DefaultContentType)\n    }\n  }\n\n  _setContent(template, content, selector) {\n    const templateElement = SelectorEngine.findOne(selector, template)\n\n    if (!templateElement) {\n      return\n    }\n\n    content = this._resolvePossibleFunction(content)\n\n    if (!content) {\n      templateElement.remove()\n      return\n    }\n\n    if (isElement(content)) {\n      this._putElementInTemplate(getElement(content), templateElement)\n      return\n    }\n\n    if (this._config.html) {\n      templateElement.innerHTML = this._maybeSanitize(content)\n      return\n    }\n\n    templateElement.textContent = content\n  }\n\n  _maybeSanitize(arg) {\n    return this._config.sanitize ? sanitizeHtml(arg, this._config.allowList, this._config.sanitizeFn) : arg\n  }\n\n  _resolvePossibleFunction(arg) {\n    return execute(arg, [undefined, this])\n  }\n\n  _putElementInTemplate(element, templateElement) {\n    if (this._config.html) {\n      templateElement.innerHTML = ''\n      templateElement.append(element)\n      return\n    }\n\n    templateElement.textContent = element.textContent\n  }\n}\n\nexport default TemplateFactory\n"],"names":["NAME","Default","allowList","DefaultAllowlist","content","extraClass","html","sanitize","sanitizeFn","template","DefaultType","DefaultContentType","entry","selector","TemplateFactory","_Config","config","_this","call","_config","_getConfig","_inheritsLoose","_proto","prototype","getContent","_this2","Object","values","map","_resolvePossibleFunction","filter","Boolean","hasContent","length","changeContent","_checkContent","_extends","toHtml","templateWrapper","document","createElement","innerHTML","_maybeSanitize","_i","_Object$entries","entries","_Object$entries$_i","text","_setContent","children","_template$classList","classList","add","apply","split","_typeCheckConfig","arg","_i2","_Object$entries2","_Object$entries2$_i","templateElement","SelectorEngine","findOne","remove","isElement","_putElementInTemplate","getElement","textContent","sanitizeHtml","execute","undefined","element","append","_createClass","key","get","Config"],"mappings":"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"}