{"version":3,"file":"button.js","sources":["../src/button.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap button.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport BaseComponent from './base-component.js'\nimport EventHandler from './dom/event-handler.js'\nimport { defineJQueryPlugin } from './util/index.js'\n\n/**\n * Constants\n */\n\nconst NAME = 'button'\nconst DATA_KEY = 'bs.button'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\n\nconst CLASS_NAME_ACTIVE = 'active'\nconst SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"button\"]'\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\n\n/**\n * Class definition\n */\n\nclass Button extends BaseComponent {\n  // Getters\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  toggle() {\n    // Toggle class and sync the `aria-pressed` attribute with the return value of the `.toggle()` method\n    this._element.setAttribute('aria-pressed', this._element.classList.toggle(CLASS_NAME_ACTIVE))\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Button.getOrCreateInstance(this)\n\n      if (config === 'toggle') {\n        data[config]()\n      }\n    })\n  }\n}\n\n/**\n * Data API implementation\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, event => {\n  event.preventDefault()\n\n  const button = event.target.closest(SELECTOR_DATA_TOGGLE)\n  const data = Button.getOrCreateInstance(button)\n\n  data.toggle()\n})\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Button)\n\nexport default Button\n"],"names":["NAME","DATA_KEY","EVENT_KEY","DATA_API_KEY","CLASS_NAME_ACTIVE","SELECTOR_DATA_TOGGLE","EVENT_CLICK_DATA_API","Button","_BaseComponent","apply","arguments","_inheritsLoose","_proto","prototype","toggle","_element","setAttribute","classList","jQueryInterface","config","each","data","getOrCreateInstance","_createClass","key","get","BaseComponent","EventHandler","on","document","event","preventDefault","button","target","closest","defineJQueryPlugin"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAWA;EACA;EACA;;EAEA,IAAMA,IAAI,GAAG,QAAQ;EACrB,IAAMC,QAAQ,GAAG,WAAW;EAC5B,IAAMC,SAAS,SAAOD,QAAU;EAChC,IAAME,YAAY,GAAG,WAAW;EAEhC,IAAMC,iBAAiB,GAAG,QAAQ;EAClC,IAAMC,oBAAoB,GAAG,2BAA2B;EACxD,IAAMC,oBAAoB,GAAA,OAAA,GAAWJ,SAAS,GAAGC,YAAc;;EAE/D;EACA;EACA;AAEMI,MAAAA,MAAM,0BAAAC,cAAA,EAAA;EAAA,EAAA,SAAAD,MAAA,GAAA;EAAA,IAAA,OAAAC,cAAA,CAAAC,KAAA,CAAA,IAAA,EAAAC,SAAA,CAAA,IAAA,IAAA;EAAA;IAAAC,cAAA,CAAAJ,MAAA,EAAAC,cAAA,CAAA;EAAA,EAAA,IAAAI,MAAA,GAAAL,MAAA,CAAAM,SAAA;EAMV;EAAAD,EAAAA,MAAA,CACAE,MAAM,GAAN,SAAAA,MAAMA,GAAG;EACP;EACA,IAAA,IAAI,CAACC,QAAQ,CAACC,YAAY,CAAC,cAAc,EAAE,IAAI,CAACD,QAAQ,CAACE,SAAS,CAACH,MAAM,CAACV,iBAAiB,CAAC,CAAC;EAC/F;;EAEA;EAAA;EAAAG,EAAAA,MAAA,CACOW,eAAe,GAAtB,SAAOA,eAAeA,CAACC,MAAM,EAAE;EAC7B,IAAA,OAAO,IAAI,CAACC,IAAI,CAAC,YAAY;EAC3B,MAAA,IAAMC,IAAI,GAAGd,MAAM,CAACe,mBAAmB,CAAC,IAAI,CAAC;QAE7C,IAAIH,MAAM,KAAK,QAAQ,EAAE;EACvBE,QAAAA,IAAI,CAACF,MAAM,CAAC,EAAE;EAChB;EACF,KAAC,CAAC;KACH;IAAA,OAAAI,YAAA,CAAAhB,MAAA,EAAA,IAAA,EAAA,CAAA;MAAAiB,GAAA,EAAA,MAAA;MAAAC,GAAA;EApBD;EACA,IAAA,SAAAA,MAAkB;EAChB,MAAA,OAAOzB,IAAI;EACb;EAAC,GAAA,CAAA,CAAA;EAAA,CAAA,CAJkB0B,aAAa;EAwBlC;EACA;EACA;EAEAC,YAAY,CAACC,EAAE,CAACC,QAAQ,EAAEvB,oBAAoB,EAAED,oBAAoB,EAAE,UAAAyB,KAAK,EAAI;IAC7EA,KAAK,CAACC,cAAc,EAAE;IAEtB,IAAMC,MAAM,GAAGF,KAAK,CAACG,MAAM,CAACC,OAAO,CAAC7B,oBAAoB,CAAC;EACzD,EAAA,IAAMgB,IAAI,GAAGd,MAAM,CAACe,mBAAmB,CAACU,MAAM,CAAC;IAE/CX,IAAI,CAACP,MAAM,EAAE;EACf,CAAC,CAAC;;EAEF;EACA;EACA;;AAEAqB,6BAAkB,CAAC5B,MAAM,CAAC;;;;;;;;"}