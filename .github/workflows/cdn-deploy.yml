name: Build & deploy CDN assets

on:
  push:
    branches:
      - master
    tags:
      - '[0-9]+.[0-9]+.[0-9]+*'

jobs:
  deploy:
    name: Build & deploy CDN assets
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set variables for Docker images
        # Can't currently use hashFiles(). See: https://github.community/t/hashfiles-with-multiple-patterns/17168
        run: |
          lockhash=$(find Dockerfile Gemfile.lock package-lock.json scripts -type f -exec sha256sum {} \; | awk '{ print $1 }' | sha256sum - | awk '{ print $1 }')
          registry='docker.pkg.github.com'
          imageprefix="${registry}/${GITHUB_REPOSITORY}/"
          imagename='az-nodejs-ephemeral'
          echo "::set-env name=AZ_DOCKER_REGISTRY::${registry}"
          echo "::set-env name=AZ_EPHEMERAL_IMAGE::${imageprefix}${imagename}:${lockhash}"
          echo "::set-env name=AZ_BOOTSTRAP_SOURCE_DIR::arizona-bootstrap-src"

      - name: Docker authentication
        run: |
          docker login "$AZ_DOCKER_REGISTRY" -u "$GITHUB_ACTOR" -p ${{ secrets.GITHUB_TOKEN }}

      - name: Search for Docker image
        id: dockerpull
        continue-on-error: true
        run: |
          docker pull "$AZ_EPHEMERAL_IMAGE"

      - name: Conditionally rebuild and save the Docker image
        if: ${{ steps.dockerpull.outcome == 'failure' }}
        run: |
          docker build -t "$AZ_EPHEMERAL_IMAGE" .
          docker push "$AZ_EPHEMERAL_IMAGE"

      - name: Build variables
        run: |
          echo "::set-env name=AZ_TRIMMED_REF::${GITHUB_REF#refs/*/}"

      - name: Build CDN assets
        run: |
          docker run --rm -v $(pwd):/arizona-bootstrap azdigital/az-node-jre-jekyll:0.0.2 /arizona-bootstrap/scripts/build-cdn-assets.sh

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@b77dc228388218453070969c00c26dc392ecb114
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Deploy CDN assets to S3 + CloudFront
        run: |
            aws s3 sync --cache-control max-age=691200 dist/ s3://${{ secrets.AZ_DIGITAL_CDN_BUCKET }}/lib/arizona-bootstrap/${AZ_TRIMMED_REF}/
            aws cloudfront create-invalidation --distribution-id ${{ secrets.AZ_DIGITAL_CDN }} --paths /lib/arizona-bootstrap/${AZ_TRIMMED_REF}/*

      - name: Update 'latest' CDN assets to S3 + CloudFront
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          aws s3 sync --cache-control max-age=691200 dist/ s3://${{ secrets.AZ_DIGITAL_CDN_BUCKET }}/lib/arizona-bootstrap/latest/
          aws cloudfront create-invalidation --distribution-id ${{ secrets.AZ_DIGITAL_CDN }} --paths /lib/arizona-bootstrap/latest/*
